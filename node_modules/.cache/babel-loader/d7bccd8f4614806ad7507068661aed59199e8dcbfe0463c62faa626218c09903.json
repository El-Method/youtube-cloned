{"ast":null,"code":"var _jsxFileName = \"/home/el-method/Desktop/youtube-clone/src/components/Feed.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { Box, Stack, Typography } from \"@mui/material\";\nimport { fetchFromAPI } from \"../utils/FetchFromAPI\";\nimport { Videos, Sidebar } from \"./\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Feed = () => {\n  _s();\n  const [selectedCategory, setSelectedCategory] = useState('New');\n  const [videos, setVideos] = useState([]);\n  useEffect(() => {\n    fetchFromAPI(`?part=snippet&q=${selectedCategory}`).then(data => setVideos(data.items));\n  }, [selectedCategory]);\n  return /*#__PURE__*/_jsxDEV(Stack, {\n    sx: {\n      flexDirection: {\n        sx: \"column\",\n        md: \"row\"\n      }\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        height: {\n          sx: 'auto',\n          md: '92vh'\n        },\n        borderRight: '1px solid #3d3d3d',\n        px: {\n          sx: 0,\n          md: 2\n        }\n      },\n      children: [/*#__PURE__*/_jsxDEV(Sidebar, {\n        selectedCategory: selectedCategory,\n        setSelectedCategory: setSelectedCategory\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: \"copyright\",\n        variant: \"body2\",\n        sx: {\n          mt: 1.5,\n          color: '#fff'\n        },\n        children: \"Copyright 2023 Dannyswiss.dev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      p: 2,\n      sx: {\n        overflowY: 'auto',\n        height: '90vh',\n        flex: 2\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        fontWeight: \"bold\",\n        mb: 2,\n        sx: {\n          color: 'white'\n        },\n        children: [selectedCategory, \" \", /*#__PURE__*/_jsxDEV(\"span\", {\n          style: {\n            color: '#FC1503'\n          },\n          children: \"videos\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Videos, {\n        videos: videos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }, this);\n};\n_s(Feed, \"t4BY2eLza6GtxanItZWLUvjeGFs=\");\n_c = Feed;\nexport default Feed;\n\n// import React, { useEffect, useState } from \"react\";\n// import { Box, Stack, Typography } from \"@mui/material\";\n\n// import { fetchFromAPI } from \"../utils/fetchFromAPI\";\n// import { Videos, Sidebar } from \"./\";\n// const Feed = () => {\n//   const [selectedCategory, setSelectedCategory] = useState(\"New\");\n//   const [videos, setVideos] = useState(null);\n\n//   useEffect(() => {\n//     setVideos(null);\n\n//     fetchFromAPI(`search?part=snippet&q=${selectedCategory}`)\n//       .then((data) => setVideos(data.items))\n//     }, [selectedCategory]);\n\n//   return (\n//     <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//       <Box sx={{ height: { sx: \"auto\", md: \"92vh\" }, borderRight: \"1px solid #3d3d3d\", px: { sx: 0, md: 2 } }}>\n//         <Sidebar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\n\n//         <Typography className=\"copyright\" variant=\"body2\" sx={{ mt: 1.5, color: \"#fff\", }}>\n//           Copyright © 2022 JSM Media\n//         </Typography>\n//       </Box>\n\n//       <Box p={2} sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}>\n//         <Typography variant=\"h4\" fontWeight=\"bold\" mb={2} sx={{ color: \"white\" }}>\n//           {selectedCategory} <span style={{ color: \"#FC1503\" }}>videos</span>\n//         </Typography>\n\n//         <Videos videos={videos} />\n//       </Box>\n//     </Stack>\n//   );\n// };\n\n// export default Feed;\nvar _c;\n$RefreshReg$(_c, \"Feed\");","map":{"version":3,"names":["React","useEffect","useState","Box","Stack","Typography","fetchFromAPI","Videos","Sidebar","jsxDEV","_jsxDEV","Feed","_s","selectedCategory","setSelectedCategory","videos","setVideos","then","data","items","sx","flexDirection","md","children","height","borderRight","px","fileName","_jsxFileName","lineNumber","columnNumber","className","variant","mt","color","p","overflowY","flex","fontWeight","mb","style","_c","$RefreshReg$"],"sources":["/home/el-method/Desktop/youtube-clone/src/components/Feed.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\"\nimport { Box, Stack, Typography } from \"@mui/material\"\n\nimport { fetchFromAPI } from \"../utils/FetchFromAPI\"\nimport { Videos, Sidebar } from \"./\"\n\nconst Feed = () => {\n  const [selectedCategory, setSelectedCategory] = useState('New')\n  const [videos, setVideos] = useState ([])\n  \n  useEffect(() => {\n\n    fetchFromAPI(`?part=snippet&q=${selectedCategory}`)\n    .then((data) => setVideos(data.items))\n  }, [selectedCategory])\n\n  return (\n    <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n      <Box sx={{ height: {sx: 'auto', md: '92vh' }, borderRight: '1px solid #3d3d3d', px: {sx: 0, md: 2} }}>\n        <Sidebar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\n\n        <Typography className=\"copyright\" variant=\"body2\" sx={{ mt: 1.5, color: '#fff', }}>\n          Copyright 2023 Dannyswiss.dev\n        </Typography>\n      </Box>\n\n      <Box p={2} sx={{ overflowY: 'auto', height: '90vh', flex: 2}}>\n        <Typography variant=\"h4\" fontWeight=\"bold\" mb={2} sx={{ color: 'white' }}>\n          {selectedCategory} <span style={{color: '#FC1503'}}>videos</span>\n        </Typography>\n\n        <Videos videos={videos} />\n      </Box>\n    </Stack>\n  )\n}\n\nexport default Feed\n\n\n// import React, { useEffect, useState } from \"react\";\n// import { Box, Stack, Typography } from \"@mui/material\";\n\n// import { fetchFromAPI } from \"../utils/fetchFromAPI\";\n// import { Videos, Sidebar } from \"./\";\n// const Feed = () => {\n//   const [selectedCategory, setSelectedCategory] = useState(\"New\");\n//   const [videos, setVideos] = useState(null);\n\n//   useEffect(() => {\n//     setVideos(null);\n\n//     fetchFromAPI(`search?part=snippet&q=${selectedCategory}`)\n//       .then((data) => setVideos(data.items))\n//     }, [selectedCategory]);\n\n//   return (\n//     <Stack sx={{ flexDirection: { sx: \"column\", md: \"row\" } }}>\n//       <Box sx={{ height: { sx: \"auto\", md: \"92vh\" }, borderRight: \"1px solid #3d3d3d\", px: { sx: 0, md: 2 } }}>\n//         <Sidebar selectedCategory={selectedCategory} setSelectedCategory={setSelectedCategory} />\n        \n//         <Typography className=\"copyright\" variant=\"body2\" sx={{ mt: 1.5, color: \"#fff\", }}>\n//           Copyright © 2022 JSM Media\n//         </Typography>\n//       </Box>\n\n//       <Box p={2} sx={{ overflowY: \"auto\", height: \"90vh\", flex: 2 }}>\n//         <Typography variant=\"h4\" fontWeight=\"bold\" mb={2} sx={{ color: \"white\" }}>\n//           {selectedCategory} <span style={{ color: \"#FC1503\" }}>videos</span>\n//         </Typography>\n\n//         <Videos videos={videos} />\n//       </Box>\n//     </Stack>\n//   );\n// };\n\n// export default Feed;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,GAAG,EAAEC,KAAK,EAAEC,UAAU,QAAQ,eAAe;AAEtD,SAASC,YAAY,QAAQ,uBAAuB;AACpD,SAASC,MAAM,EAAEC,OAAO,QAAQ,IAAI;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEpC,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC;EAC/D,MAAM,CAACa,MAAM,EAAEC,SAAS,CAAC,GAAGd,QAAQ,CAAE,EAAE,CAAC;EAEzCD,SAAS,CAAC,MAAM;IAEdK,YAAY,CAAE,mBAAkBO,gBAAiB,EAAC,CAAC,CAClDI,IAAI,CAAEC,IAAI,IAAKF,SAAS,CAACE,IAAI,CAACC,KAAK,CAAC,CAAC;EACxC,CAAC,EAAE,CAACN,gBAAgB,CAAC,CAAC;EAEtB,oBACEH,OAAA,CAACN,KAAK;IAACgB,EAAE,EAAE;MAAEC,aAAa,EAAE;QAAED,EAAE,EAAE,QAAQ;QAAEE,EAAE,EAAE;MAAM;IAAE,CAAE;IAAAC,QAAA,gBACxDb,OAAA,CAACP,GAAG;MAACiB,EAAE,EAAE;QAAEI,MAAM,EAAE;UAACJ,EAAE,EAAE,MAAM;UAAEE,EAAE,EAAE;QAAO,CAAC;QAAEG,WAAW,EAAE,mBAAmB;QAAEC,EAAE,EAAE;UAACN,EAAE,EAAE,CAAC;UAAEE,EAAE,EAAE;QAAC;MAAE,CAAE;MAAAC,QAAA,gBACnGb,OAAA,CAACF,OAAO;QAACK,gBAAgB,EAAEA,gBAAiB;QAACC,mBAAmB,EAAEA;MAAoB;QAAAa,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEzFpB,OAAA,CAACL,UAAU;QAAC0B,SAAS,EAAC,WAAW;QAACC,OAAO,EAAC,OAAO;QAACZ,EAAE,EAAE;UAAEa,EAAE,EAAE,GAAG;UAAEC,KAAK,EAAE;QAAQ,CAAE;QAAAX,QAAA,EAAC;MAEnF;QAAAI,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAY,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC,eAENpB,OAAA,CAACP,GAAG;MAACgC,CAAC,EAAE,CAAE;MAACf,EAAE,EAAE;QAAEgB,SAAS,EAAE,MAAM;QAAEZ,MAAM,EAAE,MAAM;QAAEa,IAAI,EAAE;MAAC,CAAE;MAAAd,QAAA,gBAC3Db,OAAA,CAACL,UAAU;QAAC2B,OAAO,EAAC,IAAI;QAACM,UAAU,EAAC,MAAM;QAACC,EAAE,EAAE,CAAE;QAACnB,EAAE,EAAE;UAAEc,KAAK,EAAE;QAAQ,CAAE;QAAAX,QAAA,GACtEV,gBAAgB,EAAC,GAAC,eAAAH,OAAA;UAAM8B,KAAK,EAAE;YAACN,KAAK,EAAE;UAAS,CAAE;UAAAX,QAAA,EAAC;QAAM;UAAAI,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAM,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvD,CAAC,eAEbpB,OAAA,CAACH,MAAM;QAACQ,MAAM,EAAEA;MAAO;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAEZ,CAAC;AAAAlB,EAAA,CA7BKD,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA+BV,eAAeA,IAAI;;AAGnB;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}